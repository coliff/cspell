"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[82094],{99695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var i=t(86106),r=t(79252);const s={},c="Interface: RegExpPatternDefinition",o={id:"api/cspell-lib/interfaces/RegExpPatternDefinition",title:"Interface: RegExpPatternDefinition",description:"Properties",source:"@site/docs/api/cspell-lib/interfaces/RegExpPatternDefinition.md",sourceDirName:"api/cspell-lib/interfaces",slug:"/api/cspell-lib/interfaces/RegExpPatternDefinition",permalink:"/docsV2/docs/api/cspell-lib/interfaces/RegExpPatternDefinition",draft:!1,unlisted:!1,editUrl:"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/interfaces/RegExpPatternDefinition.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interface: ProgressFileComplete",permalink:"/docsV2/docs/api/cspell-lib/interfaces/ProgressFileComplete"},next:{title:"Interface: ReporterConfiguration",permalink:"/docsV2/docs/api/cspell-lib/interfaces/ReporterConfiguration"}},l={},a=[{value:"Properties",id:"properties",level:2},{value:"description?",id:"description",level:3},{value:"Source",id:"source",level:4},{value:"name",id:"name",level:3},{value:"Source",id:"source-1",level:4},{value:"pattern",id:"pattern",level:3},{value:"Source",id:"source-2",level:4}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"interface-regexppatterndefinition",children:"Interface: RegExpPatternDefinition"}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"description?"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"optional"})," ",(0,i.jsx)(n.strong,{children:"description"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Description of the pattern."}),"\n",(0,i.jsx)(n.h4,{id:"source",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:"packages/cspell-types/dist/CSpellSettingsDef.d.ts:637"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"name",children:"name"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"name"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Pattern name, used as an identifier in ignoreRegExpList and includeRegExpList.\nIt is possible to redefine one of the predefined patterns to override its value."}),"\n",(0,i.jsx)(n.h4,{id:"source-1",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:"packages/cspell-types/dist/CSpellSettingsDef.d.ts:629"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"pattern",children:"pattern"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"pattern"}),": ",(0,i.jsx)(n.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/Pattern",children:(0,i.jsx)(n.code,{children:"Pattern"})})," | ",(0,i.jsx)(n.a,{href:"/docsV2/docs/api/cspell-lib/type-aliases/Pattern",children:(0,i.jsx)(n.code,{children:"Pattern"})}),"[]"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"RegExp pattern or array of RegExp patterns."}),"\n",(0,i.jsx)(n.h4,{id:"source-2",children:"Source"}),"\n",(0,i.jsx)(n.p,{children:"packages/cspell-types/dist/CSpellSettingsDef.d.ts:633"})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},79252:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var i=t(7378);const r={},s=i.createContext(r);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);