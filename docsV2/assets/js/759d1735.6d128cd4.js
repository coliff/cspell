"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[79868],{85072:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var i=n(86106),r=n(79252);const t={},o="Interface: SuggestionResult",l={id:"api/cspell-lib/interfaces/SuggestionResult",title:"Interface: SuggestionResult",description:"Extends",source:"@site/docs/api/cspell-lib/interfaces/SuggestionResult.md",sourceDirName:"api/cspell-lib/interfaces",slug:"/api/cspell-lib/interfaces/SuggestionResult",permalink:"/docsV2/docs/api/cspell-lib/interfaces/SuggestionResult",draft:!1,unlisted:!1,editUrl:"https://github.com/streetsidesoftware/cspell/tree/main/website/docs/docs/api/cspell-lib/interfaces/SuggestionResult.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interface: SuggestionOptions",permalink:"/docsV2/docs/api/cspell-lib/interfaces/SuggestionOptions"},next:{title:"Interface: SuggestionsConfiguration",permalink:"/docsV2/docs/api/cspell-lib/interfaces/SuggestionsConfiguration"}},d={},c=[{value:"Extends",id:"extends",level:2},{value:"Properties",id:"properties",level:2},{value:"compoundWord?",id:"compoundword",level:3},{value:"Source",id:"source",level:4},{value:"cost",id:"cost",level:3},{value:"Inherited from",id:"inherited-from",level:4},{value:"Source",id:"source-1",level:4},{value:"isPreferred?",id:"ispreferred",level:3},{value:"Inherited from",id:"inherited-from-1",level:4},{value:"Source",id:"source-2",level:4},{value:"word",id:"word",level:3},{value:"Inherited from",id:"inherited-from-2",level:4},{value:"Source",id:"source-3",level:4}];function u(e){const s={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"interface-suggestionresult",children:"Interface: SuggestionResult"}),"\n",(0,i.jsx)(s.h2,{id:"extends",children:"Extends"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"SuggestionResultBase"})}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(s.h3,{id:"compoundword",children:"compoundWord?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"compoundWord"}),": ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["The suggested word with compound marks, generally a ",(0,i.jsx)(s.code,{children:"\u2022"})]}),"\n",(0,i.jsx)(s.h4,{id:"source",children:"Source"}),"\n",(0,i.jsx)(s.p,{children:"packages/cspell-trie-lib/dist/lib/suggestions/SuggestionTypes.d.ts:16"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"cost",children:"cost"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"cost"}),": ",(0,i.jsx)(s.code,{children:"number"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The edit cost 100 = 1 edit"}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from",children:"Inherited from"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"SuggestionResultBase.cost"})}),"\n",(0,i.jsx)(s.h4,{id:"source-1",children:"Source"}),"\n",(0,i.jsx)(s.p,{children:"packages/cspell-trie-lib/dist/lib/suggestions/SuggestionTypes.d.ts:7"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"ispreferred",children:"isPreferred?"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"optional"})," ",(0,i.jsx)(s.strong,{children:"isPreferred"}),": ",(0,i.jsx)(s.code,{children:"boolean"})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["This suggestion is the preferred suggestion.\nSetting this to ",(0,i.jsx)(s.code,{children:"true"})," implies that an auto fix is possible."]}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-1",children:"Inherited from"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"SuggestionResultBase.isPreferred"})}),"\n",(0,i.jsx)(s.h4,{id:"source-2",children:"Source"}),"\n",(0,i.jsx)(s.p,{children:"packages/cspell-trie-lib/dist/lib/suggestions/SuggestionTypes.d.ts:12"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"word",children:"word"}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"word"}),": ",(0,i.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"The suggested word"}),"\n",(0,i.jsx)(s.h4,{id:"inherited-from-2",children:"Inherited from"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.code,{children:"SuggestionResultBase.word"})}),"\n",(0,i.jsx)(s.h4,{id:"source-3",children:"Source"}),"\n",(0,i.jsx)(s.p,{children:"packages/cspell-trie-lib/dist/lib/suggestions/SuggestionTypes.d.ts:5"})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},79252:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var i=n(7378);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);